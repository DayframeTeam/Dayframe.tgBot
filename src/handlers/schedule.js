import axios from 'axios';
import { sendAnimatedDots } from '../utils/botHelpers.js';
import 'dotenv/config';

const API_BASE = process.env.SERVER_URL || 'http://localhost:3000';

export default async function scheduleHandler(ctx) {
    // –ó–∞–ø—É—Å–∫–∞–µ–º dots –∏ –ø–æ–ª—É—á–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    const removeDots = await sendAnimatedDots(ctx, 300);

    // –í—ã–ø–æ–ª–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ä–∞–±–æ—Ç—É
    const resultText = await fetchTasks(ctx);
  
    // –£–¥–∞–ª—è–µ–º dots —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    await removeDots();
  
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    await ctx.reply(resultText, { parse_mode: 'Markdown' });
 
}

async function fetchTasks(ctx) {
  const chatId = ctx.from.id;
  const apiUrl = `${API_BASE}/bot/today/${chatId}`;

  // –£–∫–∞–∑—ã–≤–∞–µ–º Telegram —á—Ç–æ –±–æ—Ç ¬´–ø–µ—á–∞—Ç–∞–µ—Ç‚Ä¶¬ª
  await ctx.telegram.sendChatAction(ctx.chat.id, 'typing');

  try {
    const res = await axios.get(apiUrl);
    const { tasks = [], templates = [], dateString } = res.data;

    // –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö, –Ω–∏ —à–∞–±–ª–æ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
    if (tasks.length === 0 && templates.length === 0) {
      return `üìÖ –£ –≤–∞—Å –Ω–µ—Ç –∑–∞–¥–∞—á –Ω–∞ —Å–µ–≥–æ–¥–Ω—è (${dateString}).`;
    }

    // –°–æ–±–∏—Ä–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
    let text = [`üìÖ –ó–∞–¥–∞—á–∏ –Ω–∞ *${dateString}*:`, ''];

    if (tasks.length) {
      text.push('üìù *–í–∞—à–∏ –∑–∞–¥–∞—á–∏:*');
      tasks.forEach((t, i) => {
        const doneMark = t.is_done ? '‚úÖ' : '';
        text.push(`${i + 1}. ${t.title} ${doneMark}`);
      });
      text.push('');
    }

    if (templates.length) {
      text.push('üìã *–®–∞–±–ª–æ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏:*');
      templates.forEach((t, i) => {
        text.push(`${i + 1}. ${t.title}`);
      });
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–¥–Ω–æ–π Markdown-—Ä–∞–∑–º–µ—Ç–∫–æ–π
    return text.join('\n');
  } catch (err) {
    console.error('‚ùå scheduleHandler error:', err);
    return '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞—á–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
  }
}